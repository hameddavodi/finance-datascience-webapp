
version: "3.8"

services:
  django:
    build: .
    container_name: ww_django

    ports:
      - "8000:8000"
      
    command: ["sh", "./run.sh"]

    depends_on:
      - pgdb
      - rabit

  pgdb:
    image: postgres:14.1-alpine
    
    container_name: ww_pgdb
    healthcheck:
      #test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

    environment:
       - POSTGRES_USER=henry
       - POSTGRES_PASSWORD=henry
       - POSTGRES_DB=wisdomise

    ports:
      - "65432:5432"
    expose:
      - "65432"

  pg_admin:
    image: "dpage/pgadmin4:latest"
    container_name: ww_pgadmin
    
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@email.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_LISTEN_PORT=5050

    ports:
      - "5050:5050"
  
  rabit:
    image: rabbitmq:latest
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFUALT_USER=guest
      - RABBITMQ_DEFUALT_PASS=guest

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "wisdomise_broker:1:1"
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock

